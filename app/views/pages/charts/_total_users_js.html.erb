<script type="text/javascript">
	$(document).ready( function() {
		Chart_01.init();
		console.log("Chart_01 ready");
	});

var Chart_01 = (function () {

    "use strict";

	var error_msg = null,
		initialized = false,
		big_chart = null,
		small_chart = null,
		is_visible = [ false, false ],
		chart_data = null,
		fetch_active = false,
        // Set chart options
        //'Date');
        //'Other');
        //'Dem');
        //'Rep');
        //'annotation'} );
        //'Goal');
        //'annotation'} );
        //'Goal Pad');
        options_small = {title:'<%= t(:TotalSignups) %>',
						 titleTextStyle: { color: '#0a0a0a',
  										fontSize: 20,
  										bold: true },
						titlePosition: 'in',
						colors:['#007700', '#2790D1', '#D40E1F', '683E7D', '#FFFFFF'],
						width:$(window).width(),
						height:300,
						legend:'none',
						seriesType: 'bars',
						isStacked: true,
						lineWidth: 8,
						vAxis: {'format': 'short'},
      					series: {0: {type: 'bar'}, 1: {type: 'bar'}, 2: {type: 'bar'}, 3: {type: 'line'}, 4: {type: 'line'}},
						annotations: {
								alwaysOutside: true,
								textStyle: {
									color: '#0c0c0c',
      								fontSize: 18,
      								bold: true
    							}},
						chartArea: {left:'12%',top:'4%',width:'84%',height:'88%'}},
        options_big = {'title':'<%= t(:TotalSignups) %>',
						 titleTextStyle: { color: '#0a0a0a',
  										fontSize: 20,
  										bold: true },
						titlePosition: 'in',
						colors:['#007700', '#2790D1', '#D40E1F', '683E7D', '#FFFFFF'],
						width:$(window).width(),
						height:500,
						legend:'none',
						seriesType: 'bars',
						isStacked: true,
						lineWidth: 8,
						vAxis: {'format': 'short'},
      					series: {0: {type: 'bar'}, 1: {type: 'bar'}, 2: {type: 'bar'}, 3: {type: 'line'}, 4: {type: 'line'}},
						annotations: {
								alwaysOutside: true,
								textStyle: {
									color: '#0c0c0c',
      								fontSize: 18,
      								bold: true
    							}},
						chartArea: {left:'12%',top:'4%',width:'84%',height:'88%'}},

		current_size = 'small',


	init = function() {
		//console.log('API Initialized');
		if(!Chart_01.initialized) {
			$('#chartSpinner').show();
      		// Load the Visualization API and the corechart package.
      		// google.charts.load('current', {'packages':['corechart']});
      		// Set a callback to run when the Google Visualization API is loaded.
      		google.charts.setOnLoadCallback(Chart_01.create_charts);
		}
	},

    create_charts = function() {

        Chart_01.big_chart = new google.visualization.ComboChart(document.getElementById('chart_div_big_01'));
        Chart_01.small_chart = new google.visualization.ComboChart(document.getElementById('chart_div_small_01'));
		Chart_01.initialized = true;

		Chart_01.reveal_chart();
	},

	reveal_chart = function() {
		if($('#big_chart_slider_box').is(':visible')) {
			if(!is_visible[0]) {
				Chart_01.draw_chart('big');
				console.log("Showing MEDIUM UP");
				is_visible[0] = true;
			}
		} else {
			is_visible[0] = false;
		}
		if($('#small_chart_slider_box').is(':visible')) {
			if(!is_visible[1]) {
				Chart_01.draw_chart('small');
				console.log("Showing SMALL");
				is_visible[1] = true;
			}
		} else {
			is_visible[1] = false;
		}
	},

	draw_chart = function(size) {

		console.info("*** Drawing Total Users ***");
		if(Chart_01.fetch_active) return;
		Chart_01.fetch_active = true;

        Chart_01.chart_data = new google.visualization.DataTable();
        Chart_01.chart_data.addColumn('string', 'Date');
        Chart_01.chart_data.addColumn('number', 'Other');
        Chart_01.chart_data.addColumn('number', 'Dem');
        Chart_01.chart_data.addColumn('number', 'Rep');
        Chart_01.chart_data.addColumn({type: 'string', role: 'annotation'} );
        Chart_01.chart_data.addColumn('number', 'Goal');
        Chart_01.chart_data.addColumn({type: 'string', role: 'annotation'} );
        Chart_01.chart_data.addColumn('number', 'Goal Pad');

		Chart_01.current_size = size;
        // Create the data table.
		$('#chartSpinner').show();
		Api.fetch_chart(1, function(d) {
			console.log('Got chart 01 info back '+d);
			var ann_0 = null;
			var ann_1 = null;
			if(Chart_01.current_size == 'small') {
				for(var i = 10; i < d.dates.length; i++) {
					if(i == d.dates.length - 2) {
						ann_0 = d.values_goal[d.values_goal.length-1]+' ';
					} else {
						ann_0 = null;
					}
					if(i == (d.dates.length - 1)) {
						ann_1 = (d.values_oth[i] + d.values_dem[i] + d.values_rep[i])+' ';
					} else {
						ann_1 = null;
					}
<% if (Rails.env.production?)  %>
        			Chart_01.chart_data.addRow( [d.dates[i], d.values_oth[i], d.values_dem[i], d.values_rep[i], ann_1, d.values_goal[i], ann_0, d.values_goal[i] * 1.2 ] );
<% else %>
        			Chart_01.chart_data.addRow( [d.dates[i], d.values_oth[i], d.values_dem[i], d.values_rep[i], ann_1, d.values_goal[i], ann_0, d.values_goal[i] * 1.2 ] );
<% end %>
        		}
			} else {
				for(var i = 0; i < d.dates.length; i++) {
					if(i == d.dates.length - 2) {
						ann_0 = d.values_goal[d.values_goal.length-1]+' ';
					} else {
						ann_0 = null;
					}
					if(i == (d.dates.length - 1)) {
						ann_1 = (d.values_oth[i] + d.values_dem[i] + d.values_rep[i])+' ';
					} else {
						ann_1 = null;
					}
<% if (Rails.env.production?)  %>
        			Chart_01.chart_data.addRow( [d.dates[i], d.values_oth[i], d.values_dem[i], d.values_rep[i], ann_1, d.values_goal[i], ann_0, d.values_goal[i] * 1.2 ] );
<% else %>
        			Chart_01.chart_data.addRow( [d.dates[i], d.values_oth[i], d.values_dem[i], d.values_rep[i], ann_1, d.values_goal[i], ann_0, d.values_goal[i] * 1.2 ] );
<% end %>
        		}
			}

			switch(Chart_01.current_size) {
			case 'big':
        		Chart_01.big_chart.draw(Chart_01.chart_data, options_big);
				Chart_00.start_slider('big');
				break;
			case 'small':
				var ticks = [ d.dates[10], d.dates[13], d.dates[15], d.dates[17], d.dates[19] ];
				options_small['hAxis'] = { 'showTextEvery': 3 };
        		Chart_01.small_chart.draw(Chart_01.chart_data, options_small);
				Chart_00.start_slider('small');
				break;
			default:
				console.error("unknown chart size "+size);
				break;
			}
			$('#chartSpinner').hide();
			Chart_01.fetch_active = false;
		});
	};

    return {
		init: init,
		initialized: initialized,
		error_msg: error_msg,
		big_chart: big_chart,
		small_chart: small_chart,
		create_charts: create_charts,
		reveal_chart: reveal_chart,
		draw_chart: draw_chart,
		// Globals
		chart_data: chart_data,
		options_small: options_small,
		options_big: options_big,
		current_size: current_size,
		fetch_active: fetch_active
    };

}());

</script>
